<?xml version="1.0" encoding="UTF-8"?>

<!-- Ce fichier constitue une section du livre                              -->
<!--                                                                        -->
<!--      Mathématiques discrètes : Intuition et rigueur                    -->
<!--                                                                        -->
<!-- Creative Commons Attribution Share Alike 4.0 International             -->
<!-- CC-BY-4.0                                                              -->
<!-- Jean-Sébastien Turcotte                                                -->

<!-- Les sections sont divisées en quatre parties, en plus du titre. Les parties introduction et conclusion sont facultatives. Le texte de ceux-ci apparait respectivement avant et après les sections. Les exercices sont à la fin de la section -->

<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="sec-chaineEuler">   <!-- Ajouter l'identifiant de la section après le - du xml:id -->
    <title> Chaîne, cycle et graphe eulérien </title>
    <introduction xml:id= "intro-chaineEuler">  <!-- Ajouter le même identifiant de la section après le - du xml:id -->
    <p>
        
    </p>
    </introduction>
    
    <!-- Sous-sections à écrire, à même ce fichier -->
    <subsection xml:id="subsec-chaineCycle">
        <title>Chaîne et cycle</title>
        <introduction>
            <p>
                On veut étudier les différentes façons dont il est possible de se déplacer à l'intérieur d'un graphe, d'un sommet à l'autre en empruntant les arêtes. Non seulement les graphes sont justement utiles afin de représenter des chemins (trajets routiers, aériens et autres), mais l'étude des différents chemins présents à l'intérieur d'un graphe permet souvent de mieux comprendre ceux-ci.
            </p>
            <p>
                Par exemple, on pourra donner une nouvelle caractérisation des graphes bipartis en termes de chemins présents dans ces graphes. Aussi, en étudiant les chemins présents dans un graphe, il nous sera entre autres possible de montrer que deux graphes ne sont pas isomorphes. 
            </p>
            <p>
                D'un autre côté, de nombreuses applications des graphes proviennent du fait que l'on trouve le chemin le plus court entre différents sommets. On peut évidemment penser à trouver le chemin le plus court entre deux endroits dans une ville, mais on pourra également mesurer la complexité de certains algorithmes, comme des algorithmes de tri, grandement utilisés en informatique.
            </p>
            <p>
                Puisque la définition d'un graphe a été donnée en termes d'ensembles, on doit donner la définition d'un chemin de façon similaire. Aussi, lorsqu'on travaille avec des graphes non orientés, comme c'est notre cas, on parlera d'une chaîne plutôt que d'un chemin. Le terme chemin étant habituellement utilisé pour les graphes orientés
            </p>
        </introduction>
        <definition xml:id="def-chaineCylce">
            <statement>
                <p>
                    Soit <m>G=(S,A)</m> un graphe simple, une chaîne de longueur <m>n\in \N^\ast</m> reliant les sommets <m>s, t\in S</m>, ou encore une chaîne entre <m>s</m> et <m>t</m>, est une suite de sommets <m>s_0, s_1, \dots, s_n</m> de <m>G</m> tel que <m>\{s_i, s_{i+1}\}\in A</m> pour <m>i=0, 1, \dots, n-1</m>, avec <m>s_0=s</m> et <m>s_n=t</m>. 
                </p>
                <p>
                    Si toutes les arêtes formant la chaîne sont uniques, c'est-à-dire si <m>\{s_i, s_{i+1}\}\neq \{s_j, s_{j+1}\}</m> lorsque <m>i\neq j</m>, on dirat que la chaîne est une chaîne simple.
                </p>
                <p>
                    Si <m>s_0=s_n</m>, on parlera d'un cycle plutôt que d'une chaîne.
                </p>
            </statement>
        </definition>
        <example xml:id="exe-defChaineCycle">
            <title>Quelsques chaînes</title>
            <statement>
                <p>
                    On considère le graphe <m>G</m> ci-dessous.
                    <figure xml:id="fig-defChaineCycle">
                        <caption><m>G</m></caption>
                        <image width="50%" xml:id="tikzit_defChaineCycle">
                            <shortdescription>Un graphe pour introduire les définitions de chaînes.</shortdescription>
                            <latex-image>
                                \begin{tikzpicture}
                                    \begin{pgfonlayer}{nodelayer}
		                            \node [style=SommetGraphe] (0) at (-2, 1) {};
		                            \node [style=SommetGraphe] (1) at (-2, -1) {};
		                            \node [style=SommetGraphe] (2) at (0, -1) {};
		                            \node [style=SommetGraphe] (3) at (0, 1) {};
		                            \node [style=SommetGraphe] (4) at (0, 0) {};
		                            \node [style=SommetGraphe] (5) at (2, 0) {};
		                            \node [style=SommetGraphe] (6) at (3, 1) {};
		                            \node [style=SommetGraphe] (7) at (4, 0) {};
		                            \node [style=SommetGraphe] (8) at (3, -1) {};
		                            \node [style=none] (9) at (-2.5, 1.5) {$a$};
	                            	\node [style=none] (10) at (0, 1.75) {$b$};
	                                \node [style=none] (11) at (0.5, 0.25) {$c$};
	                            	\node [style=none] (12) at (0, -1.5) {$d$};
	                            	\node [style=none] (13) at (-2.75, -1) {$e$};
		                            \node [style=none] (14) at (1.75, -0.5) {$f$};
		                            \node [style=none] (15) at (3, 1.75) {$g$};
		                            \node [style=none] (16) at (4.5, 0) {$h$};
		                            \node [style=none] (17) at (3, -1.5) {$i$};
	                            \end{pgfonlayer}
	                            \begin{pgfonlayer}{edgelayer}
		                            \draw (0) to (3);
		                            \draw (0) to (1);
		                            \draw (1) to (2);
		                            \draw (2) to (4);
		                            \draw (3) to (4);
		                            \draw (3) to (1); 
		                            \draw (0) to (2);
		                            \draw (4) to (5);
		                            \draw (5) to (6);
		                            \draw (6) to (7);
		                            \draw (7) to (8);
		                            \draw (8) to (5);
	                            \end{pgfonlayer}
                                \end{tikzpicture}
                            </latex-image>
                        </image>
                    </figure>
                </p>
                <p>
                    On remarque qu'il existe de nombreuses chaînes reliant <m>a</m> et <m>h</m>. Par exemple, il y a la chaîne  <m>a, e, d, a, e, b, c, f, g, h</m> est une chaîne de longueur <m>9</m>. Celle-ci n'est pas simple, car elle passe deux fois par <m>\{a,e\}</m>. 
                </p>
                <p>
                    Si on se limite aux chaînes simples, on peut trouver des chaînes de longueur <m>6</m>. Par exemple, les chaînes <m>a, e, b, c, g, i, h</m> et <m>a, b, d, c, f, g, h</m>. 
                </p>
                <p>
                    On remarque également que la chaîne <m>a, b, c, f, g, h</m> est parmi les chaînes les plus courtes (de longueur <m>5</m>) reliant <m>a</m> et <m>h</m>.
                </p>
                <p>
                    Finalement, <m>G</m> possède plusieurs cycles. Par exemple, la chaîne <m>a, b, d, a</m> est un cycle simple de longueur <m>3</m>, alors que la chaîne <m>f, g, h, i, f</m> est un cycle simple de longueur <m>4</m>.
                </p>
            </statement>
        </example>
    </subsection>

    <subsection xml:id="subsec-grapheConnexe">
        <title>Graphes connexes</title>
        <p>
            Jusqu'à maintenant, pour la grande majorité des graphes étudiés, il était toujours possible de trouver une chaîne reliant deux sommets quelconques du graphe. Ceci n'est pas toujours vrai, et les graphes ayant cette propriété seront nommés des graphes connexes. Si un graphe n'est pas connexe, il sera toujours possible de se restreindre à des sous-graphes connexes, c'est-à-dire ses composantes connexes.
        </p>
        <definition xml:id="def-grapheConnexe">
            <statement>
                <p>
                    Soit <m>G=(S,A)</m> un graphe simple. Si, pour tout <m>s, t \in S</m>, il existe une chaîne reliant <m>s</m> et <m>t</m>, alors on dira que <m>G</m> est un <term>graphe connexe</term>.
                </p>
                <p>
                    Si on peut écrire <m>G</m> comme l'union de graphes <m>G_i=(S_i,A_i)</m> tels que <m>G_i</m> est connexe et <m>S_i\cap S_j =\emptyset</m> lorsque <m>i\neq j</m>, on dira que les graphes <m>G_i</m> sont les <term>composantes connexes</term> de <m>G</m>.
                </p>
            </statement>
        </definition>
        <p>
            Si un graphe n'est pas connexe, il sera toujours possible de le séparer en ses composantes connexes. Cependant, le cas où le nombre de sommets du graphe est infini est un peu plus complexe. On se limitera donc au cas où le graphe possède un nombre fini de sommets.
        </p>
        <proposition xml:id="prop-composanteConnexe">
            <statement>
                <p>
                    Soit <m>G=(S,A)</m> un graphe simple fini, c'est-à-dire que <m>|S|\in \N^\ast</m>, alors on peut trouver des graphes <m>G_i=(S_i,A_i)</m>, pour <m>i=1, 2, \dots, n</m> tels que  <m>G=\bigcup_{i=1}^n G_i =G_1\cup G_2\cup \cdots \cup G_n</m>, <m>G_i</m> est connexe pour tout <m>i</m> et <m>S_i\cap S_j =\emptyset</m> lorsque <m>i\neq j</m>.
                </p>
            </statement>
            <proof>
                <p>
                    La preuve est laissée <xref ref="exo-proofPropComposanteConnexe" text="custom">en exercise</xref>.
                </p>
            </proof>
        </proposition>
   </subsection>

   <subsection xml:id="subs-eulerien">
<title> Chemins et circuits eulériens </title>
<introduction>
    <p>
        On termine la section avec l'étude d'un type particulier de graphes connexes, les graphes eulériens. Ce type de graphes as été utilisé afin de modéliser le fameux problème du postier chinois.  
    </p>
</introduction>
<definition xml:id="def-eulerien">
<statement> 
<p>
<ul>
<li> Une <term>chaîne eulérienne</term> d'un graphe <m>G</m> est une chaîne simple passant par toutes les arêtes de <m> G</m>.</li>
<li> Un <term>cycle eulérien</term> d'un graphe <m>G</m> est un cycle simple passant par toutes les arêtes de <m>G</m>.</li>
<li><p>Si un graphe <m>G</m> possède un cycle eulérien, on dirat que <m>G</m> est un <term>graphe eulérien</term>.</p>
</li>
</ul> 
</p>
</statement>
</definition>

<example xml:id="exe-eulerien">
<statement> 
<p>
<ul>
<li>La chaîne <m>a,c,e,d,c,b,a,d,b</m> est une chaîne eulérienne du graphe <m>G_1</m>.</li>
<li>La chaîne <m>a,b,c,d,b</m> est une chaîne eulérien du graphe <m>G_2</m>.</li>
<li> Le cycle <m>a,b,e,d,c,e,a</m> est un cycle eulérien du graphe <m>G_3</m>.</li>
<li>Le graphe <m>G_4</m> ne possède aucune chaîne eulérienne, et aucun cycle eulérien.</li>
<li>Le graphe <m>G_5</m> ne possède aucune chaîne eulérienne, et aucun cycle eulérien.</li>
</ul>
</p>
<figure>
    <caption> Chaînes et cycles eulériens</caption>
    <sidebyside>
        <figure>
            <caption> <m>G_1</m></caption>
            <image source="tikzit_GrapheCheminEuler.jpg"/>
        </figure>
        <figure>
            <caption><m>G_2</m> </caption>
            <image source="tikzit_GrapheCheminNonCircuitHamilton.jpg" />
        </figure>
        <figure>
            <caption><m>G_3</m> </caption>
            <image source="tikzit_GrapheCircuitEuler.jpg" />
        </figure>
        <figure>
            <caption><m>G_4</m> </caption>
            <image source="tikzit_GrapheNoEuler.jpg" />
        </figure>
        <figure>
            <caption><m>G_5</m> </caption>
            <image source="tikzit_GrapheNoEuler2.jpg" />
        </figure>
    </sidebyside>
</figure>
</statement>
</example>

<p>Pour montrer l'existence d'une chaîne ou d'un cycle eulérien, on peut essayer d'en trouver un. Pour montrer qu'il n'en existe pas, il faut argumenter un peu plus. </p>
<p>Le critère donne une condition suffisante et nécessaire pour l'existence d'une chaîne ou d'un cycle eulérien</p>

<proposition xml:id="prop-eulerien">
<statement>
<p> 
<ul>
<li> Un graphe <m>G</m> de trois sommets ou plus possède un cycle eulérien si et seulement si <m>\deg(s)</m> est pair pour tout sommet <m>s</m> de <m>G</m>. </li>
<li> Un graphe <m>G</m> possède une chaîne eulérienne si et seulement si il existe exactement deux sommets de <m>G</m> ayant un degré impair.</li>
</ul>
</p>
</statement>
</proposition>
</subsection>
    
    <conclusion xml:id="concl-connexeEuler">  <!-- Ajouter le même identifiant de la section après le - du xml:id -->
    
    </conclusion>
    <reading-questions xml:id="rq-connexeEuler">  <!-- Ajouter le même identifiant de la section après le - du xml:id -->
    <introduction>
    <p>Ces questions sont à faire avant de venir en classe et à remettre au début du cours.</p>
    </introduction>
  
    <exercise>
    <statement><p>Noter toute question qui demeure suite à la lecture de la section et la résolution des exercices ci-dessus ou toute précision/clarification à apporter. Note: cette question est facultative.</p></statement>
    </exercise>
    </reading-questions>
   <!--Inclure les exercices de la section ci-dessous--> 
   <!--<xi:include href="Exercices_.ptx" />-->




<!-- <subsection xml:id="subs-cheminCircuit">
<title> Chemins et circuits</title>
<definition xml:id="def-chemin">
<statement>
<p> Soit <m>n</m> un entier naturel et <m>G</m> un graphe. Un chemin de longueur <m>n</m>  allant du sommet <m>s</m> au sommet <m>t</m> est une suite de sommets de <m>G</m> <m>s_0,\,s_1,\,s_1,\,\dots,\,s_n</m> tels que: </p>
<p> 
<ul>
<li> <m>s_0=s,</m> <m>s_n=t</m>; </li>
<li> <m>\{s_0,s_1\},\,\{s_1,s_2\},\,\dots,\,\{s_{n-1},s_n\}</m> sont des arêtes de <m>G</m>.</li>
</ul>
</p>
<p>Un chemin sera dit simple s'il traverse une arête au plus une fois.</p>
</statement>
</definition>

<definition xml:id="def-circuit">
<statement><p>Soit <m>n</m> un entier naturel et <m>G</m> un graphe. Un circuit de longueur <m>n</m> est un chemin allant de <m>s</m> à <m>t</m> tel que <m>s=t</m>.</p> </statement>
</definition>



</subsection>

<subsection xml:id="subs-eulerien">
<title> Chemins et circuits eulériens </title>
<definition xml:id="def-eulerien">
<statement> 
<p>
<ul>
<li> Un chemin eulérien d'un graphe <m>G</m> est un chemin simple allant de <m>s</m> à <m>t\neq s </m>  passant par toutes les arêtes de <m> G</m>.</li>
<li> Un circuit eulérien d'un graphe <m>G</m> est un circuit simple passant par toutes les arêtes de <m> G</m>.</li>
</ul> 
</p>
</statement>
</definition>

<example xml:id="exe-eulerien">
<statement> 
<p>
<ul>
<li>Le chemin <m>a,c,e,d,c,b,a,d,b</m> est un chemin eulérien du graphe <m>G_1</m>.</li>
<li>Le chemin <m>a,b,c,d,b</m> est un chemin eulérien du graphe <m>G_2</m>.</li>
<li> Le circuit <m>a,b,e,d,c,e,a</m> est un circuit eulérien du graphe <m>G_3</m>.</li>
<li>Le graphe <m>G_4</m> ne possède ni un chemin eulérien, ni un circuit eulérien.</li>
<li>Le graphe <m>G_5</m> ne possède ni un chemin eulérien, ni un circuit eulérien.</li>
</ul>
</p>
<figure>
    <caption> Chemins et circuits eulériens</caption>
    <sidebyside>
        <figure>
            <caption> <m>G_1</m></caption>
            <image source="tikzit_GrapheCheminEuler.jpg"/>
        </figure>
        <figure>
            <caption><m>G_2</m> </caption>
            <image source="tikzit_GrapheCheminNonCircuitHamilton.jpg" />
        </figure>
        <figure>
            <caption><m>G_3</m> </caption>
            <image source="tikzit_GrapheCircuitEuler.jpg" />
        </figure>
        <figure>
            <caption><m>G_4</m> </caption>
            <image source="tikzit_GrapheNoEuler.jpg" />
        </figure>
        <figure>
            <caption><m>G_5</m> </caption>
            <image source="tikzit_GrapheNoEuler2.jpg" />
        </figure>
    </sidebyside>
</figure>
</statement>
</example>

<p>Pour montrer l'existance d'un chemin ou d'un circuit eulérien, on peut essayer d'en trouver un. Pour montrer qu'il n'en existe pas, il faut argumenter un peu plus. </p>
<p>Le critère donne une condition suffisante et nécessaire pour l'existance d'une chemin ou d'un circuit eulérien</p>

<proposition xml:id="prop-eulerien">
<statement>
<p> 
<ul>
<li> Un graphe <m>G</m> de trois sommets ou plus possède un circuit eulérien si et seulement si <m>\deg(s)</m> est pair pour tout sommet <m>s</m> de <m>G</m>. </li>
<li> Un graphe <m>G</m> possède un chemin eulérien si et seulement si il existe exactement deux sommets de <m>G</m> ayant un degré impair.</li>
</ul>
</p>
</statement>
</proposition>
</subsection>

<subsection xml:id="subs-hamiltonien">
<title>  Chemins et circuits hamiltoniens</title>
<definition xml:id="def-hamiltonien">
<statement> 
<p>
<ul>
<li> Un chemin hamiltonien d'un graphe <m>G</m> est un chemin simple allant de <m>s</m> à <m>t\neq s </m>  passant par tous les sommets de <m> G</m> exactement une fois.</li>
<li> Un circuit hamiltonien d'un graphe <m>G</m> est un circuit simple passant par tous les sommets de <m> G</m> exactement une fois.</li>
</ul> 
</p>
</statement>
</definition>

<example xml:id="exe-hamiltonien">
<statement> 
<p>
<ul>
<li>Le chemin <m>a,e,d,b,c</m> est un chemin hamiltonien du graphe <m>G_1</m>.</li>
<li>Le chemin <m>a,b,c,d</m> est un chemin hamiltonien du graphe <m>G_2</m>.</li>
<li> Le circuit <m>a,c,b,e,f,d,a</m> est un circuit hamiltonien du graphe <m>G_3</m>.</li>
<li>Le graphe <m>G_4</m> ne possède ni un chemin hamiltonien, ni un circuit hamiltonien.</li>
</ul>
</p>
<figure>
    <caption> Chemins et circuits hamiltoniens</caption>
    <sidebyside>
        <figure>
            <caption> <m>G_1</m></caption>
            <image source="tikzit_grapheH.jpg"/>
        </figure>
        <figure>
            <caption><m>G_2</m> </caption>
            <image source="tikzit_GrapheCheminNonCircuitHamilton.jpg" />
        </figure>
        <figure>
            <caption><m>G_3</m> </caption>
            <image source="tikzit_Graphesdiff2.jpg" />
        </figure>
        <figure>
            <caption><m>G_4</m> </caption>
            <image source="tikzit_GrapheNoHamilton.jpg" />
        </figure>
    </sidebyside>
</figure>
</statement>
</example>

<p>Il n'existe pas de condition suffisante et nécessaire à l'exsitance d'une circuit ou d'un chemin hamiltonien. Il existe cependant des conditions suffisantes. En voilà une.</p>
<proposition xml:id="prop-hamiltonien">
<statement>
<p> Si <m>G</m> est un graphe à <m> n</m> sommets avec <m> n\geq 3</m> tel que <m>\deg(s)+\deg(t)\geq n</m> pour toute paire de sommets non-adjacent <m>u</m> et <m>v</m> de <m>G,</m> alors <m>G</m> possède un circuit hamiltonien.</p>
</statement>
</proposition>

</subsection>-->


<exercises xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="exo-connexeEuler">   <!-- Ajouter l'identifiant de la section après le - du xml:id -->
    <title> Exercices </title>>

<exercise xml:id="exo-connexeChaineSimple">
<statement>
    <p>
        Soit <m>G=(S,A)</m> un graphe simple connexe. Montrer que si <m>s, t</m> sont des sommets quelconques de <m>G</m>, alors il existe une chaîne <em>simple</em> reliant <m>s</m> et <m>t</m>.
    </p>
</statement>
<solution>
    <p>
        Puisque <m>G</m> est connexe, alors il existe une chaîne <m>s=s_0, s_1, \dots, s_n=t</m>. Supposons que cette chaîne soit de longueur minimale. On veut montrer que cette chaîne est simple.
    </p>
    <p> 
        Supposons le contraire, alors il existe <m>i, j</m> des indices tels que <m>0\leq i\lt j \leq n</m> avec <m>s_i=s_j</m>. Ainsi, la chaîne <me>s_0, \dots s_{i-1}, s_i, s_{j+1}, s_{j+2}, \dots s_n</me> est une chaîne reliant <m>s</m> et <m>t</m> de longueur <m>n-(j-i)\lt n</m>. Cette chaîne est donc plus courte que la chaîne initiale. Ceci est une contradiction, car on avait supposé que la chaîne était la plus courte possible.
    </p>
    <p>
        La chaîne <m>s=s_0, s_1, \dots, s_n=t</m> est donc nécessairement une chaîne simple reliant <m>s</m> et <m>t</m>.
    </p>
</solution>
</exercise>

<exercise xml:id="exo-addChaine">
    <introduction>
        <p>
            Soit <m>G=(S,A)</m> un graphe simple, et soit <m>s, t, u \in S</m>. 
        </p>
    </introduction>
    <task>
    <statement>
        <p>
            Montrer que s'il existe une chaîne de longueur <m>n</m> entre <m>s</m> et <m>t</m>, et s'il existe une chaîne de longueur <m>m</m> entre <m>t</m> et <m>u</m>, alors il existe une chaîne de longueur <m>m+n</m> entre <m>s</m> et <m>u</m>.
        </p>
    </statement>
    </task>
    <task>
    <statement>
        <p>
            Montrer que s'il existe une chaîne de longueur <m>n</m> entre <m>s</m> et <m>t</m>, une arête entre <m>t</m> et <m>u</m>, et 'il existe une chaîne de longueur <m>m</m> entre <m>s</m> et <m>u</m>, alors il existe un cycle de longueur <m>m+n+1</m> qui commence à <m>s</m>.
        </p>
    </statement>
    </task>
</exercise>

<exercise xml:id="exo-proprieteGrapheBiparti">
<statement>
<p>
    Soit <m>G=(S_1\cup S_2,A)</m> <xref ref="def-grapheBi" text="custom"> un graphe biparti</xref> (avec <m>S_1</m> et <m>S_2</m> les parties de <m>G</m>). Soit <m>s_0, s_1, \dots, s_n</m> une chaîne de <m>G</m>, et supposons que <m>s_1\in S_1</m>. Montrer que pour les sommets d'indice impair dans cette chaîne sont des éléments de <m>S_1</m>. Plus formellement, montrer que si <m>k\in \N</m> tel que <m>1\leq 2k+1 \leq n</m>, alors <m>s_{2k+1}\in S_1</m>.
</p>
</statement>
<solution>
    <p>
        Supposons par contradiction qu'il existe un des sommets d'indice impair qui est un élément de <m>S_2</m>, alors on peut choisir <m>s_{2k+1}\in S_2</m> avec l'indice le plus petit possible. Puisque <m>s_1\in S_1</m>, on a que <m>3\leq 2k+1\leq n</m>.
    </p>
    <p>    
         Or, <m>\{s_{2k-1},s_{2k}\}</m> et <m>\{s_{2k}, s_{2k+1}\}</m> sont des arêtes de <m>G</m>. Puisque <m>2k+1</m> est minimal, on doit avoir <m>s_{2k-1}\in S_1</m>, mais alors <m>s_{2k}\in S_2</m> et donc <m>s_{2k+1}\in S_1</m>. Puisque <m>S_1\cap S_2 = \emptyset</m>, on obtient une contradiction.
    </p>
    <p>
        Par ce qui précède, il ne peut pas y avoir de sommet de la chaîne d'indice impair dans <m>S_2</m>. 
    </p>
    <remark>
        <p>
            Par ce qui précède, on obtient directement que <m>s_{2k}\in S_2</m> lorsque <m>0\leq 2k \leq n</m>. 
        </p>
    </remark>
</solution>
</exercise>

<exercise xml:id="exo-carBiparti">
    <statement>
        <p>
            Montrer qu'un graphe <m>G=(S,A)</m> est un graphe biparti si et seulement si <m>G</m> ne possède aucun cycle de longueur impaire.
        </p>
    </statement>
    <solution>
        <p>
            Supposons que <m>G</m> soit un graphe biparti avec <m>S_1</m> et <m>S_2</m> les parties de <m>G</m>. Supposons qu'il existe un cycle de longueur impair <m>s_0, s_1, \dots, s_{2k+1}</m> avec <m>s_1\in S_1</m>. On a alors <m>s_0\in S_2</m>. De plus, par l'exercice <xref ref="exo-proprieteGrapheBiparti"/>, on a également que <m>s_{2k+1}\in S_1</m>. Cependant, puisque <m>s_0, s_1, \dots, s_{2k+1}</m> ext un cycle, on a <m>s_0=s_{2k+1}</m>. Ceci est impossible, car <m>S_1\cap S_2 =\emptyset</m>.
        </p>
        <p>
            Supposons maintenant que <m>G</m> ne possède aucun cycle de longueur impaire. On suppose que <m>G</m> est connexe. Sinon, on utilise l'argument ci-dessous sur chaque composante connexe de <m>G</m>. On choisit un sommet <m>s_0</m> quelconque de <m>G</m>, et on pose <m>S_1</m> l'ensemble des sommets relié à <m>s_0</m> par une chaîne de longueur impaire, et <m>S_2</m> l'ensemble des sommets relié à <m>s_0</m> par une chaîne de longueur paire. Puisque <m>G</m> est connexe, on a bien <m>S=S_1\cup S_2</m>.
        </p>
        <p>
            On commence par montrer que <m>S_1\cap S_2=\emptyset</m>. Si <m>t\in S_1\cap S_2</m>, alors il existe une chaîne de longueur impaire ainsi qu'une chaîne de longueur paire entre <m>s_0</m> et <m>t</m>. Ainsi, par l'exercice <xref ref="exo-addChaine"/>, il existe un cycle de longueur impaire dans <m>G</m>, ce qui est une contradiction.
        </p>
        <p>
            Il reste maintenant à montrer qu'il n'y a pas d'arête entre deux sommets de <m>S_i</m>, pour <m>i=1</m> et pour <m>i=2</m>. Supposons le contraire. Ainsi, il existe une arête entre <m>t_1, t_2\in S_i</m> pour <m>i=1</m> ou <m>i=2</m>. De plus, on sait qu'il existe une chaîne de longueur <m>n\equiv i \mod 2</m> entre <m>s_0</m> et <m>t_1</m>, ainsi qu'une chaîne de longueur <m>m\equiv i \mod 2</m>. Encore par l'exercice <xref ref="exo-addChaine"/>, il existe un cycle de longueur <m>n+m+1\equiv i+i+1\mod 2 \equiv 1 \mod 2</m>, c'est-à-dire qu'il existe un cycle de longueur impaire, ce qui est en contradiction avec notre hypothèse.
        </p>
    </solution>
</exercise>

<exercise xml:id="exo-aretePont">
<statement>
<p>
    Soit <m>G=(S,A)</m> un graphe simple connexe tel que <m>S=S_1\cup S_2</m>, <m>S_1\cap S_2=\emptyset</m>, <m>s_1\in S_1</m> et <m>s_2\in S_2</m>. Montrer qu'il existe <m>u_1\in S_1</m> et <m>u_2\in S_2</m> tels que <m>\{u_1,u_2\}</m> est une arête de <m>G</m>, c'est-à-dire que <m>\{u_1,u_2\}\in A</m>.
</p>
</statement>
</exercise>

<exercise>
    <statement>
        <p>
            Soit <m>G, H</m> deux graphes simples tels qu'il existe un isomorphisme <m>f</m> entre eux, c'est-à-dire que <m>G\cong H</m>, montrer que si <m>s_0, s_1, \dots, s_n</m> est une chaîne de <m>G</m>, alors <m>f(s_1), f(s_2), \dots, f(s_n)</m> est une chaîne de <m>H</m>.
        </p>
    </statement>
</exercise>



<exercise xml:id="exo-proofPropComposanteConnexe">
<introduction>
<p>
    On veut démontrer la proposition <xref ref="prop-composanteConnexe"/>. Soit <m>G=(S,A)</m> un graphe simple tel que <m>|S|\in \N^\ast</m>, on définit <m> G_i=(S_i,A_i)</m> successivement de la façon suivante.
</p> 
<p>
    On choisit un sommet quelconque <m>s_1\in S</m>. On pose <m>S_1</m> l'ensemble des sommets de <m>G</m> reliés à <m>s_1</m> par une chaîne. On pose <m>G_1</m> comme étant le <xref ref="def-sousGrapheInduit" text="custom"> sous-graphe de <m>G</m> induit par <m>S_1</m> </xref>.
</p>
<p>
    Supposons maintenant qu'on ait défini les sous-graphes <m>G_1=(S_1,A_1)</m> jusqu'à <m>G_k=(S_k,A_k)</m> pour un certain entier positif <m>k</m>. Si <m>S=\bigcup_{i=1}^k S_i=S_1\cup S_2\cup \cdots \cup S_k</m>, alors on a terminé. Sinon, il existe un sommet <m>s_{k+1}\in S-\bigl(S_1\cup\cdots \cup S_k \bigr)</m>. On veut définir <m>G_{k+1}</m> à l'aide de ce sommet.
</p>
<p>
    On pose <m>S_{k+1}</m> l'ensemble des sommets qui sont reliés à <m>s_{k+1}</m> par une chaîne de <m>G</m>. Finalement on pose <m>G_{k+1}</m> le sous-graphe de <m>G</m> induit par <m>S_{k+1}</m>.
</p>
</introduction>
<task>
<statement>
    <p>
        Montrer que les graphes <m>G_i</m> obtenus dans le processus précédent sont connexes.
    </p>
</statement>
</task>
<task>
<statement>
<p>
    Montrer que si <m>i \lt j</m>, et si  <m>S_i</m> et <m>S_j</m> sont les ensembles obtenus dans le processus précédent, alors <m>S_i\cap S_j=\emptyset</m>.
</p>
</statement>
</task>
<task>
<statement>
<p>
    Montrer que le processus précédent se termine en un nombre fini d'étapes, c'est-à-dire qu'il existe un entier positif <m>k</m> tel que <m>S=S_1\cup\cdots \cup S_k</m>.
</p>
</statement>
</task>
<task>
<statement>
<p>
    Vérifier que <m>G=G_1\cup \cdot \cup G_k</m>.
</p>
</statement>
</task>
</exercise>
</exercises>
</section>
